import type { NextPage } from 'next';
import Head from 'next/head';

import { yupResolver } from "@hookform/resolvers/yup";
import {
  Button, makeStyles, TextField, Typography
} from "@material-ui/core";

import axios from "axios";
import Cookies from "js-cookie";
import Image from 'next/image';
import { useRouter } from 'next/router';
 
import { useForm } from "react-hook-form";
import * as yup from "yup";
import styles from '../styles/Home.module.css';

import { toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';


interface IFormInput {
  email: string;
  name: string;
  password: string;
}
const schema = yup.object().shape({
  email: yup.string().required().email(),
  name: yup.string().required().min(2).max(25),
  password: yup.string().required().min(4).max(120),
});


const useStyles = makeStyles((theme) => ({
  heading: {
    textAlign: "center",
    margin: theme.spacing(1, 0, 4),
  },
  submitButton: {
    marginTop: theme.spacing(4),
  },
}));


const Register: NextPage = () => {
  const notify = () => toast("Wow so easy!");
  const { heading, submitButton } = useStyles();
  // const [json, setJson] = useState<string>();
 
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<IFormInput>({
    resolver: yupResolver(schema),
  });


  
  const router = useRouter();
  const redirect = router.query.redirect as string;
  //const { state, dispatch } = useContext(StoreContext);
  //const { userInfo } = state;


  //const dispatch = useDispatch();
  //const { name, email } = useSelector(getAuthState);

  const onClick = () => {
    setTimeout(() => {
      //dispatch(setName('monirrr'));
      // dispatch(setEmail('sulhadin@hotmail.com'));
    }, 100000000);
  };


  // useEffect(() => {
  //   if (userInfo) {
  //     router.push("/");
  //   }
  // }, []);

  const onSubmit = async (data: IFormInput) => {
 
let { email, name, password } = data;
   
    try {
      const { data } = await axios.post("/api/users/register", {
        email,
        name,
        password,
      });
      dispatch({ type: "USER_LOGIN", payload: data });
      Cookies.set("userInfo", data);
      router.push(redirect || "/");
     // notify("ooo");
     
    } catch (err: any) {
    
    }
   // setJson(JSON.stringify(data));
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <button onClick={onClick}>Change it!</button>
      <main className={styles.main}>
      <Typography className={heading} variant="h3">
        Sign Up Form
      </Typography>
      <form onSubmit={handleSubmit(onSubmit)} noValidate>
        <TextField
          {...register("email")}
          variant="outlined"
          margin="normal"
          label="Email"
          fullWidth
          required
        />
        <TextField
          {...register("name")}
          variant="outlined"
          margin="normal"
          label="Name"
          fullWidth
          required
        />
        <TextField
          {...register("password")}
          variant="outlined"
          margin="normal"
          label="Password"
          type="password"
          fullWidth
          required
        />
        <Button
          type="submit"
          fullWidth
          variant="contained"
          color="primary"
          className={submitButton}
        >
          Sign Up
        </Button>
     
      </form>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Register


 